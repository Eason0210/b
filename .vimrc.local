set t_Co=256
let mapleader = ","

nnoremap <leader>s :%s/ \+$//gc<cr>a<cr><cr>

function! ToggleNuMode()
  if(&rnu == 1)
    set nu
  else
    set rnu
  endif
endfunction
nnoremap <leader>n :call ToggleNuMode()<cr>
au BufReadPost * set relativenumber

map <leader>j <leader>lb

map <leader>p Pjddkyy

color wombat256
au BufNewFile,BufRead *.handlebars set filetype=mustache

set shellredir=>%s\ 2>&1

set notimeout
set ttimeout
set timeoutlen=50

set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

set encoding=utf-8
set scrolloff=3
set autoindent
set autoread
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set nocursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2

nnoremap <leader><space> :noh<cr>

cnoremap w!! %!sudo tee > /dev/null %

nnoremap <tab> %
vnoremap <tab> %

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" todo: make A work in iTerm2
nnoremap ∆ :m+<CR>==    " Option + j
nnoremap ˚ :m-2<CR>==   " Option + k
inoremap ∆ <Esc>:m+<CR>==gi
inoremap ˚ <Esc>:m-2<CR>==gi
vnoremap ∆ :m'>+<CR>gv=gv
vnoremap ˚ :m-2<CR>gv=gv

noremap H ^
noremap L $

"nnoremap <leader>gR :call ShowRoutes()<cr>
nnoremap <leader>gg :CommandTFlush<cr>\|:CommandT<cr>
nnoremap <leader>gv :CommandTFlush<cr>\|:CommandT app/views<cr>
nnoremap <leader>gc :CommandTFlush<cr>\|:CommandT app/controllers<cr>
nnoremap <leader>gm :CommandTFlush<cr>\|:CommandT app/models<cr>
nnoremap <leader>gl :CommandTFlush<cr>\|:CommandT lib<cr>
nnoremap <leader>ga :CommandTFlush<cr>\|:CommandT app/assets<cr>
nnoremap <leader>gp :CommandTFlush<cr>\|:CommandT public<cr>
nnoremap <leader>gr :topleft 100 :split config/routes.rb<cr>
nnoremap <leader>gG :topleft 100 :split Gemfile<cr>

nnoremap <leader>sv :source ~/.vimrc.local<cr>
nnoremap <leader>ev :edit ~/.vimrc.local<cr>

nnoremap <leader>4 :NERDTree<cr>:set nornu<cr>

nnoremap <leader><leader> <C-^>
cnoremap %% <C-R>=expand('%:h').'/'<cr>
cnoremap %! <C-R>=expand('%')<cr>

" <leader>F maps <leader>f to run the current spec.
function! MapSpecRun ()
  nnoremap <leader>f :w\|:!rspec --color --format progress <C-R>=expand('%')<cr><cr>
endfunction
nnoremap <leader>F :call MapSpecRun()<cr>

set statusline=%F%m%r%h%w\ <%Y>\ %l:%v(%L\|%p%%)

inoremap kj <Esc>
nnoremap ; :

if has("mouse")
  set mouse=a
endif

if has("persistent_undo")
  set undodir=~/.vim/undodir
  set undofile
endif

