set t_Co=256
let mapleader = ","

" Make vim fast.
set synmaxcol=150
set ttyfast
set ttyscroll=3
set lazyredraw

filetype plugin on

nnoremap <leader>4 :TagbarToggle<cr>
command! Ctr !/usr/local/bin/ctags -R --languages=ruby . ~/.rbenv/versions/1.9.3-p125-perf/lib/ruby/gems/1.9.1/gems/
nnoremap <leader>5 :GundoToggle<cr>
let g:Powerline_symbols = 'fancy'
" let g:Powerline_cache_enabled = 0
let g:Powerline_colorscheme = 'solarized' " https://raw.github.com/gist/2003862/e245d6d9b60b16ea38d384107401ef9ad04fbb47/solarized.vim

nnoremap <leader>s :%s/ \+$//g<cr>:noh<cr>

function! ToggleNuMode()
  if(&rnu == 1)
    set nu
  else
    set rnu
  endif
endfunction
nnoremap <leader>n :call ToggleNuMode()<cr>
au BufReadPost * set relativenumber

nnoremap <space> @q

nmap <leader>j <leader>lb

nnoremap <leader>p Pjddkyy

au BufNewFile,BufRead *.handlebars set filetype=mustache

set notimeout
set ttimeout
set timeoutlen=50

set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab

set guifont=Pragmata\ TT\ for\ Powerline:h12
set noantialias
set guioptions-=r
set guioptions-=L
set guioptions-=e

colorscheme solarized

" Convert symbol to string
nmap ,v lF:xysiw'
" Convert string to symbol
nmap ,V ds'i:<esc>

" Edit related test
" nnoremap <leader>5 <C-w>v<C-w>l:A<cr>

nnoremap <leader>8 Orequire'ruby-debug';debugger<esc>
nnoremap <leader>9 Orequire'pry';binding.pry<esc>

nnoremap Y yf$

inoremap <C-j> <esc>jli
inoremap <C-k> <esc>kli
inoremap <C-e> <esc>A
inoremap <C-a> <esc>I
nnoremap <C-e> $
nnoremap <C-a> ^

set encoding=utf-8
set scrolloff=3
set autoindent
set autoread
set showmode
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set visualbell
set nocursorline
set ruler
set backspace=indent,eol,start
set laststatus=2

nnoremap <leader><space> :noh<cr>

cnoremap w!! %!sudo tee > /dev/null %

nnoremap <tab> %
vnoremap <tab> %

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" <A-l>
nnoremap ¬ :tabn<cr>
" <A-h>
nnoremap ˙ :tabp<cr>
" <A-n>
nnoremap ˜ :tabnew<cr>
" <A-w>
nnoremap ∑ :tabclose<cr>

nnoremap ∆ :m+<CR>==    " Option + j
nnoremap ˚ :m-2<CR>==   " Option + k
inoremap ∆ <Esc>:m+<CR>==gi
inoremap ˚ <Esc>:m-2<CR>==gi
vnoremap ∆ :m'>+<CR>gv=gv
vnoremap ˚ :m-2<CR>gv=gv

noremap H ^
noremap L $

"nnoremap <leader>gR :call ShowRoutes()<cr>
nnoremap <leader>gg :CommandTFlush<cr>\|:CommandT<cr>
nnoremap <leader>gv :CommandTFlush<cr>\|:CommandT app/views<cr>
nnoremap <leader>gc :CommandTFlush<cr>\|:CommandT app/controllers<cr>
nnoremap <leader>gb :CommandTFlush<cr>\|:CommandT app/behaviours<cr>
nnoremap <leader>gd :CommandTFlush<cr>\|:CommandT app/decorators<cr>
nnoremap <leader>gm :CommandTFlush<cr>\|:CommandT app/models<cr>
nnoremap <leader>gl :CommandTFlush<cr>\|:CommandT lib<cr>
nnoremap <leader>ga :CommandTFlush<cr>\|:CommandT app/assets<cr>
nnoremap <leader>gp :CommandTFlush<cr>\|:CommandT app/presenters<cr>
nnoremap <leader>gP :CommandTFlush<cr>\|:CommandT public<cr>
nnoremap <leader>gr :topleft 100 :split config/routes.rb<cr>
nnoremap <leader>gG :topleft 100 :split Gemfile<cr>

nnoremap <leader>sv :source ~/.vimrc.local<cr>
nnoremap <leader>ev :edit ~/.vimrc.local<cr>

nnoremap <leader><leader> <C-^>
cnoremap %% <C-R>=expand('%:h').'/'<cr>
cnoremap %! <C-R>=expand('%')<cr>

" <leader>F maps <leader>f to run the current spec.
function! MapSpecRun(file)
  execute "nnoremap <leader>f :w\\|:!rspec -c -fp ".a:file."<cr>"
endfunction
nnoremap <leader>F :call MapSpecRun("<C-R>=expand('%')<cr>")<cr>

set statusline=%F%m%r%h%w\ <%Y>\ %l:%v(%L\|%p%%)

inoremap kj <esc>
cnoremap kj <esc>
vnoremap kj <esc>

nnoremap ; :

if has("mouse")
  set mouse=a
endif

if has("persistent_undo")
  set undodir=~/.vim/undodir
  set undofile
endif

command! Gshop  cd ~/src/s/shopify
command! Grails cd ~/src/g/rails
command! Gruby  cd ~/src/g/ruby
command! Lshop  lcd ~/src/s/shopify
command! Lrails lcd ~/src/g/rails
command! Lruby  lcd ~/src/g/ruby

